<!--Käsin muutettavia kohtia, kun valikoimakausi vaihtuu:
    SQL -> pkkdb01 -> STGchannel -> Selection
   Muutettava Selection-kantaan Active = true tuotteille jotka näytetään valikoimissa

   ShoppingCart
   Rivi 182, reference vaihdettava kauden mukaan-->

@using (Html.BeginForm())
{
    <div class="container-fluid">
        <form class="form-horizontal">
            <div class="form-group">
                <div class="container" style="max-width: 90%">
                    <h1 id="orderdone"></h1>
                    <h2>Suomenkielinen valikoima / Finska utbudet</h2>
                    <table class="table" id="selection_table">
                        <thead>
                            <tr>
                                <th hidden>BookID</th>
                                <th>ISBN <span class="fa fa-sort"></span></th>
                                <th>Tekijä / Författare <span class="fa fa-sort"></span></th>
                                <th>Nimi / Titel <span class="fa fa-sort"></span></th>
                                <th>Kustantaja / Förlag <span class="fa fa-sort"></span></th>
                                <th>Hinta / Pris (alv 0%) </th>
                                <th></th>
                            </tr>
                        </thead>

                    </table>
                </div>
                <br>
                <br>
                <br>
                @*<div class="form-group">
                        <div class="container">
                            <div class="row col-md-8" id="loading">
                                <h2>
                                    Lataa tietoja, odota hetki / Uppdaterar uppgifter, vänta en stund
                                </h2>
                            </div>
                        </div>
                    </div>*@
            </div>
        </form>
    </div>

}
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    <link href="~/Content/MyStyle.css" rel="stylesheet" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.3.1/css/flag-icon.min.css" rel="stylesheet" />


    @*<script src="~/Scripts/jquery.freezeheader.js"></script>*@
    <script>
        $(document).ready(function () {

            //$('#selection_table').freezeHeader();


         var cartuser = @HttpContext.Current.User.Identity.Name;

        ////  Lataa tietoja -teksti
        //$(document).ajaxStart(function () {
        //    $("#loading").show();
        //}).ajaxStop(function () {
        //    $("#loading").hide('slow');
        //});

                 // ostoskorin tiedot
                $.ajax({
                    type: 'GET',
                    url: '/api/Cart_NotSentToJvs',
                    dataType: 'json',
                  }).then(function (data) {
                    let counter = 0;
                    $.each(data, function (index, val) {
                        if (val.CompanyID == cartuser && val.IsInCart == true) {
                             counter = counter + 1;
                    }
                       });
                      $('#cartsum').empty().append(counter);
                  })

                    $.ajax({
                        type: 'GET',
                        url: '/api/SelectionsAPI',
                        dataType: 'json',
                        success: function (data) {
                            var selection = '';
                            $.each(data, function (i, val) {
                                if (val.Language == 'Suomi' && val.Active == true) {
                                    // luodaan taulukko, johon arvot tuodaan halutuista sarakkeista
                                    selection +=
                                        '<tr>' +
                                        "<td hidden>" + val.BookID + "</td>" +
                                        "<td>" + val.ISBN + "</td>" +
                                        "<td>" + val.Author + "</td>" +
                                        "<td>" + val.BookName + "</td>" +
                                        "<td>" + val.Publisher + "</td>" +
                                        "<td>" + val.Price + "€ </td>" +
                                        "<td><a href='#'><span class='fa fa-shopping-cart' data-id=" + val.ISBN + "></span></a></td>" +
                                        '</tr>';

                                    // Show which rows already in cart green-color or hides cart from already ordered itemrows
                                    $(function () {
                                        $.ajax({
                                            type: 'GET',
                                            url: '/api/Cart_NotSentToJvs',
                                            dataType: 'json',
                                            success: function (cart) {
                                                $.each(cart, function (i, cartdata) {
                                                    if (cartdata.CompanyID == cartuser && cartdata.IsInCart == true && cartdata.ISBN == val.ISBN) {
                                                        if (val.ISBN == cartdata.ISBN) {
                                                            $(".fa-shopping-cart[data-id=" + val.ISBN + "]").css("color", "#29d646");
                                                        }
                                                    }
                                                    if (cartdata.CompanyID == cartuser && cartdata.IsInCart == false && cartdata.ISBN == val.ISBN) {
                                                        if (val.ISBN == cartdata.ISBN) {
                                                            $(".fa-shopping-cart[data-id=" + val.ISBN + "]").hide();
                                                        }
                                                    }
                                                })
                                            },
                                              error: function (xhr, ajaxOptions, thrownError) {
                                                console.log(xhr.status);
                                                console.log(thrownError);
                                                console.log(xhr.responseText);
                                            }
                                        })
                                    });
                                }
                            });
                            //näytetään taulukko sivulla
                            $('#selection_table').append(selection);

                            // kuluvan päivän funktio
                            function getdate() {
                                var d = new Date();
                                var month = d.getMonth() + 1;
                                var day = d.getDate();
                                var year = d.getFullYear();
                                return date = year + '/' +
                                    (('' + month).length < 2 ? '0' : '') + month + '/' +
                                    (('' + day).length < 2 ? '0' : '') + day;
                            }

                            //klikatessa ostoskoria, klikatun rivin tiedot etsitään ja tallennetaan ostoskoriin, jos käyttäjä ei ole vielä tehnyt tilausta
                            $(".fa-shopping-cart").on("click", function (e) {
                                e.preventDefault();
                                // ostoskorin tiedot
                                $(this).css("color", "#29d646");
                                var BookID = $(this).parent().parent().prev().prev().prev().prev().prev().prev().text();
                                $.ajax({
                                    type: 'GET',
                                    url: '/api/selectionsAPI/' + BookID,
                                    dataType: 'json',
                                    success: function (sel) {
                                        $.ajax({
                                            type: 'GET',
                                            url: '/api/Cart_NotSentToJvs',
                                            dataType: 'json',
                                            success: function (cart) {
                                                var orderdone = false;
                                                //check if Book is in cart already
                                                if (orderdone == false) {
                                                    var present = false;
                                                    $.each(cart, function (i, carts) {
                                                        if (carts.CompanyID == cartuser && carts.ISBN == sel.ISBN) {
                                                            // alert('Tuote on jo ostoskorissa');
                                                            present = true;
                                                        }
                                                    })
                                                    if (present == false) {
                                                        var toCart = {
                                                            CompanyID: cartuser,
                                                            Orderdate: getdate(),
                                                            ISBN: sel.ISBN,
                                                            BookName: sel.BookName,
                                                            Author: sel.Author,
                                                            Publisher: sel.Publisher,
                                                            Price: sel.Price,
                                                            Season: sel.Season,
                                                            IsInCart: true,
                                                        };
                                                        $.ajax({
                                                            type: 'post',
                                                            url: '/api/CartsAPI',
                                                            data: toCart,
                                                            success: function () {
                                                                // ostoskorin tiedot
                                                                $.ajax({
                                                                    type: 'GET',
                                                                    url: '/api/Cart_NotSentToJvs',
                                                                    async: true,
                                                                }).then(function (data) {
                                                                    let counter = 0;
                                                                    $.each(data, function (index, val) {
                                                                        if (val.CompanyID == cartuser && val.IsInCart == true) {
                                                                            counter = counter + 1;
                                                                        }
                                                                    });
                                                                    $('#cartsum').empty().append(counter);

                                                                })
                                                            },
                                                            error: function () {
                                                                alert('Virhe!');
                                                            }
                                                        });
                                                    }
                                                }
                                            }
                                        });
                                    }
                                });
                            });

                        },
                        error: function (jqXHR) {
                            if (jqXHR.status == "401") {
                                alert('Kirjaudu uudelleen sisään');
                                location.href = "login.html";
                            }
                            else {
                                alert('Lataus ei onnistunut, yritä uudelleen')
                            }
                        }
                    });
                //etsi -toiminto
            //$("#search").on("keyup", function () {
            //    var value = $(this).val().toLowerCase();
            //    $("#selection_table tr").filter(function () {
            //        $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            //    });
            //});

            $("#search").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("table tr").each(function (index) {
                    if (index !== 0) {
                        $row = $(this);

                        $row.find('td').each(function () {
                            var id = $(this).text().toLowerCase();
                            if (id.indexOf(value) !== 0) {
                                $row.hide();
                            }
                            else {
                                $row.show();
                                return false;
                            }
                        });

                    }
                });
            });

            //taulun sorttaus
            const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;
            const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
                v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
            )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));

            document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
                const table = th.closest('#selection_table')
                Array.from(table.querySelectorAll('tr:nth-child(n+2)'))
                    .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
                    .forEach(tr => table.appendChild(tr));
            })));

            })

    </script>

}
